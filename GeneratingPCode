 private void cmbBrand_Leave(object sender, EventArgs e)
        {
            string typed = cmbBrand.Text.Trim().ToLower();
            foreach (var item in cmbBrand.Items)
            {
                if (item.ToString().ToLower().StartsWith(typed))
                {
                    cmbBrand.SelectedItem = item;
                    txtPcode.Text = GenerateProductCode(item.ToString());
                    break;
                }
            }
        }





private string GenerateProductCode(string  brandName)
        {
            string prefix = brandName.Substring(0, 1).ToUpper();
            string newCode = "";
            int number = 1;
            try
            {
                //Check if other brands start with the same firs Letter
                cn.Open();
            SqlCommand checkSimilar = new SqlCommand("SELECT COUNT(*) FROM tblBrand WHERE brand LIKE @prefix + '%'", cn);
            checkSimilar.Parameters.AddWithValue("@prefix", prefix);
            int similarCount = (int)checkSimilar.ExecuteScalar();
            cn.Close();


            //2nd: if multiple brand starts with the same letter, user 3-letter prefix
            if (similarCount > 1)
            {
                prefix = brandName.Length >= 3 ? brandName.Substring(0, 3).ToUpper() : brandName.ToUpper();
            }


            //3 generate unique code
           
                bool exists = true;

                while (exists)
                {
                    newCode = prefix + "-" + number.ToString("D4");

                    string query = @"SELECT P_Code FROM (SELECT P_Code FROM tblReceivedProduct UNION ALL SELECT p_code FROM tblStockin UNION ALL SELECT P_Code FROM tblFaultyItems) AS AllCodes WHERE P_Code = @pcode";

                    cn.Open();
                    cm = new SqlCommand(query, cn);
                    cm.Parameters.Clear();
                    cm.Parameters.AddWithValue("@pcode", newCode);

                    var result = cm.ExecuteScalar();
                    exists = result != null;
                    cn.Close();

                    if (exists)
                        number++;
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error generating product code: " + ex.Message);
                cn.Close();
            }

            return newCode;
        }
